<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="editMp3Writer1.Config" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEJNZWRpYVJpcHBlciwgVmVyc2lvbj0xLjAuMC4wLCBDdWx0dXJl
        PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwFAQAAACxCaWczLkhpdGJhc2UuTWVkaWFSaXBwZXIu
        TXAzLk1wM1dyaXRlckNvbmZpZwQAAAALRm9ybWF0LlJhdGULRm9ybWF0LkJpdHMPRm9ybWF0LkNoYW5u
        ZWxzCUJFX0NPTkZJRwAAAAQIBwcnQmlnMy5IaXRiYXNlLk1lZGlhUmlwcGVyLkxhbWUuQkVfQ09ORklH
        AgAAAAIAAABErAAAEAACAAkDAAAABQMAAAAnQmlnMy5IaXRiYXNlLk1lZGlhUmlwcGVyLkxhbWUuQkVf
        Q09ORklHAgAAAAhkd0NvbmZpZwZmb3JtYXQABA8kQmlnMy5IaXRiYXNlLk1lZGlhUmlwcGVyLkxhbWUu
        Rm9ybWF0AgAAAAIAAAAAAQAACQQAAAAFBAAAACRCaWczLkhpdGJhc2UuTWVkaWFSaXBwZXIuTGFtZS5G
        b3JtYXQDAAAAA21wMwRsaHYxA2FjYwQEBCFCaWczLkhpdGJhc2UuTWVkaWFSaXBwZXIuTGFtZS5NUDMC
        AAAAIkJpZzMuSGl0YmFzZS5NZWRpYVJpcHBlci5MYW1lLkxIVjECAAAAIUJpZzMuSGl0YmFzZS5NZWRp
        YVJpcHBlci5MYW1lLkFDQwIAAAACAAAABfv///8hQmlnMy5IaXRiYXNlLk1lZGlhUmlwcGVyLkxhbWUu
        TVAzBwAAAAxkd1NhbXBsZVJhdGUGYnlNb2RlCHdCaXRyYXRlCGJQcml2YXRlBGJDUkMKYkNvcHlyaWdo
        dAliT3JpZ2luYWwAAAAAAAAADwIOCAgICAIAAAABAAAATAAARKwAAAAAAAAAAAAAgAAAAAX6////IkJp
        ZzMuSGl0YmFzZS5NZWRpYVJpcHBlci5MYW1lLkxIVjEXAAAAD2R3U3RydWN0VmVyc2lvbgxkd1N0cnVj
        dFNpemUMZHdTYW1wbGVSYXRlDmR3UmVTYW1wbGVSYXRlBW5Nb2RlCWR3Qml0cmF0ZQxkd01heEJpdHJh
        dGUHblByZXNldA1kd01wZWdWZXJzaW9uCmR3UHN5TW9kZWwKZHdFbXBoYXNpcwhiUHJpdmF0ZQRiQ1JD
        CmJDb3B5cmlnaHQJYk9yaWdpbmFsD2JXcml0ZVZCUkhlYWRlcgpiRW5hYmxlVkJSC25WQlJRdWFsaXR5
        DGR3VmJyQWJyX2JwcwpuVmJyTWV0aG9kBmJOb1JlcwpiU3RyaWN0SXNvCG5RdWFsaXR5AAAAAAQAAAQA
        AAAAAAAAAAAAAAQAAAAPDw8PJkJpZzMuSGl0YmFzZS5NZWRpYVJpcHBlci5MYW1lLk1wZWdNb2RlAgAA
        AA8PMUJpZzMuSGl0YmFzZS5NZWRpYVJpcHBlci5MYW1lLkxBTUVfUVVBTElUWV9QUkVTRVQCAAAADw8P
        CAgICAgICA8nQmlnMy5IaXRiYXNlLk1lZGlhUmlwcGVyLkxhbWUuVkJSTUVUSE9EAgAAAAgIDgIAAAAB
        AAAATAEAAESsAAAAAAAABfn///8mQmlnMy5IaXRiYXNlLk1lZGlhUmlwcGVyLkxhbWUuTXBlZ01vZGUB
        AAAAB3ZhbHVlX18ADwIAAAAAAAAAgAAAAAAAAAAF+P///zFCaWczLkhpdGJhc2UuTWVkaWFSaXBwZXIu
        TGFtZS5MQU1FX1FVQUxJVFlfUFJFU0VUAQAAAAd2YWx1ZV9fAAgCAAAAAAAAAAEAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAABff///8nQmlnMy5IaXRiYXNlLk1lZGlhUmlwcGVy
        LkxhbWUuVkJSTUVUSE9EAQAAAAd2YWx1ZV9fAAgCAAAA/////wAAAAAAAAAAAAAF9v///yFCaWczLkhp
        dGJhc2UuTWVkaWFSaXBwZXIuTGFtZS5BQ0MEAAAADGR3U2FtcGxlUmF0ZQZieU1vZGUId0JpdHJhdGUQ
        YnlFbmNvZGluZ01ldGhvZAAAAAAPAg4CAgAAAAEAAABMAABECw==
</value>
  </data>
</root>